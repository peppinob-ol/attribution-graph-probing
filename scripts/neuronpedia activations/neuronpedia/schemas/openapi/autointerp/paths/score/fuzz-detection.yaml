post:
  summary: Score an explanation using fuzzing or detection methods
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          description: Request model for scoring explanations using fuzzing or detection methods
          required:
            - activations
            - explanation
            - openrouter_key
            - model
            - type
          properties:
            activations:
              type: array
              items:
                $ref: "../../../shared.yaml#/components/schemas/NPActivation"
              description: List of activation records to analyze
            explanation:
              type: string
              description: The explanation to evaluate
              example: "This neuron activates on references to feline behavior"
            openrouter_key:
              type: string
              description: API key for OpenRouter service
              example: "sk-or-v1-..."
            model:
              type: string
              description: Model identifier to use for scoring
              example: "openai/gpt-4o-mini"
            type:
              $ref: "../../shared/score.yaml#/components/schemas/NPScoreFuzzDetectionType"
              description: Type of scoring to perform - either fuzzing or detection
  responses:
    "200":
      description: Successful scoring
      content:
        application/json:
          schema:
            type: object
            required:
              - score
              - breakdown
            properties:
              score:
                type: number
                format: float
                description: The score from 0 to 1
              breakdown:
                type: array
                items:
                  type: object
                  description: The "scorer.__call__" result's score breakdown. Type copied from https://github.com/EleutherAI/sae-auto-interp/blob/3659ff3bfefbe2628d37484e5bcc0087a5b10a27/sae_auto_interp/scorers/classifier/sample.py#L19
                  properties:
                    str_tokens:
                      type: array
                      items:
                        type: string
                      description: List of strings
                    activations:
                      type: array
                      items:
                        type: number
                        format: float
                      description: List of floats
                    distance:
                      type: integer
                      description: Quantile or neighbor distance
                    ground_truth:
                      type: boolean
                      description: Whether the example is activating or not
                    prediction:
                      type: boolean
                      default: false
                      description: Whether the model predicted the example activating or not
                    highlighted:
                      type: boolean
                      default: false
                      description: Whether the sample is highlighted
                    probability:
                      type: number
                      format: float
                      default: 0.0
                      description: The probability of the example activating
                    correct:
                      type: boolean
                      default: false
                      description: Whether the prediction is correct
          description: Detailed breakdown of the classification outputs
    "400":
      description: Invalid request or authentication failure
    401:
      $ref: "../../../shared.yaml#/components/responses/UnauthorizedError"
    "500":
      description: Server error
