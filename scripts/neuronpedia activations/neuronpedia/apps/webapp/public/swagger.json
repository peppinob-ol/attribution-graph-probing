{
  "openapi": "3.0.0",
  "authentication": {
    "preferredSecurityScheme": "apiKey"
  },
  "info": {
    "title": "Neuronpedia API",
    "description": "This is Neuronpedia's API. You can test calls right in the browser. Requests for new APIs, questions, or feedback? Contact [johnny@neuronpedia.org](mailto:johnny@neuronpedia.org).",
    "version": "1.0"
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "Explanation": {
        "type": "object",
        "description": "Schema for a returned explanation or explanations.",
        "properties": {
          "modelId": {
            "type": "string"
          },
          "layer": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "explanationModelName": {
            "type": "string"
          }
        }
      },
      "NeuronSchema": {
        "type": "object",
        "required": ["modelId", "layer", "index"],
        "properties": {
          "modelId": {
            "type": "string"
          },
          "layer": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "sourceSetName": {
            "type": "string"
          }
        }
      },
      "InferenceActivationResultSingle": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activations": {
            "type": "object",
            "properties": {
              "layer": {
                "type": "string"
              },
              "index": {
                "type": "number"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "maxValue": {
                "type": "number"
              },
              "maxValueIndex": {
                "type": "number"
              },
              "dfaValues": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "dfaTargetIndex": {
                "type": "number"
              },
              "dfaMaxValue": {
                "type": "number"
              }
            }
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [],
  "paths": {
    "/api/explanation/export": {
      "get": {
        "tags": ["Explanations"],
        "summary": "Export Explanations",
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Exports all explanations for a specific SAE. Warning: This can be a large response (>3 megabytes).",
        "parameters": [
          {
            "in": "query",
            "name": "modelId",
            "required": true,
            "schema": {
              "type": "string",
              "default": "gpt2-small"
            },
            "description": "The model ID to that the SAE is for. For example, gpt2-small."
          },
          {
            "in": "query",
            "name": "saeId",
            "required": true,
            "schema": {
              "type": "string",
              "default": "6-res-jb"
            },
            "description": "The SAE ID to export explanations for. For example, 6-res-jb."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Explanation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/feature/{modelId}/{layer}/{index}": {
      "get": {
        "tags": ["Features"],
        "summary": "Get Feature",
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Returns a feature, including its activations and explanations.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "Model ID",
            "required": true,
            "schema": {
              "type": "string",
              "default": "gpt2-small"
            }
          },
          {
            "name": "layer",
            "in": "path",
            "description": "SAE ID or Layer",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0-res-jb"
            }
          },
          {
            "name": "index",
            "in": "path",
            "description": "Index",
            "required": true,
            "schema": {
              "type": "number",
              "default": 14057
            }
          }
        ],
        "responses": {
          "200": {
            "description": null
          }
        }
      }
    },
    "/api/activation/new": {
      "post": {
        "summary": "Activation Values for Text",
        "description": "Gets activation values for a given feature when processing custom input text. Equivalent to going to a feature page and entering custom text. The example shows this feature https://neuronpedia.org/gpt2-small/9-res-jb/200",
        "tags": ["Features"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["neuron", "customText"],
                "properties": {
                  "feature": {
                    "type": "object",
                    "properties": {
                      "modelId": {
                        "description": "The model the feature is in.",
                        "type": "string",
                        "required": true,
                        "default": "gpt2-small"
                      },
                      "layer": {
                        "description": "The SAE ID the feature is in.",
                        "type": "string",
                        "required": true,
                        "default": "9-res-jb"
                      },
                      "index": {
                        "description": "The index of the feature.",
                        "type": "string",
                        "required": true,
                        "default": "200"
                      }
                    }
                  },
                  "customText": {
                    "type": "string",
                    "description": "The custom text to process",
                    "required": true,
                    "default": "And you"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response, with activation data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferenceActivationResultSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid input"
          },
          "401": {
            "description": "Unauthorized, user doesn't have access to the model or SAE set"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/bookmark/add": {
      "post": {
        "summary": "Add Bookmark",
        "description": "Adds a bookmark for a specific feature to the authenticated user's bookmarks.",
        "tags": ["Bookmarks"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "layer", "index"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model the feature belongs to"
                  },
                  "layer": {
                    "type": "string",
                    "description": "The layer of the feature"
                  },
                  "index": {
                    "type": "string",
                    "description": "The index of the feature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added bookmark"
          }
        }
      }
    },
    "/api/bookmark/delete": {
      "post": {
        "summary": "Delete Bookmark",
        "description": "Deletes a bookmark for a specific feature from the authenticated user's bookmarks.",
        "tags": ["Bookmarks"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "layer", "index"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model the feature belongs to"
                  },
                  "layer": {
                    "type": "string",
                    "description": "The layer of the feature"
                  },
                  "index": {
                    "type": "string",
                    "description": "The index of the feature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted bookmark"
          }
        }
      }
    },
    "/api/explanation/generate": {
      "post": {
        "summary": "Generate Auto-Interp",
        "description": "Generates an explanation for a specific feature using the specified explanation type and model. IMPORTANT- this requires you to set your OpenAI/Anthropic/Google auto-interp API keys under Neuronpedia Settings.",
        "tags": ["Explanations"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "layer", "index", "explanationType", "explanationModelName"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model the feature belongs to"
                  },
                  "layer": {
                    "type": "string",
                    "description": "The layer of the feature"
                  },
                  "index": {
                    "type": "number",
                    "description": "The index of the feature"
                  },
                  "explanationType": {
                    "type": "string",
                    "description": "The type of explanation to generate. Currently supported types are \"oai_attention-head\" and \"oai_token-act-pair\"."
                  },
                  "explanationModelName": {
                    "type": "string",
                    "description": "The name of the model to use for generating the explanation. Currently supported models are \"gpt-4o\", \"gpt-4o-mini\", \"gpt-4-turbo\", \"gpt-3.5-turbo\", \"claude-3-5-sonnet-20240620\", \"gemini-1.5-flash\", and \"gemini-1.5-pro\"."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated explanation"
          }
        }
      }
    },
    "/api/explanation/search-all": {
      "post": {
        "tags": ["Explanations"],
        "summary": "Search All Features",
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search for explanations in all features on Neuronpedia. Takes a query and returns up to 20 results at a time.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "required": true,
                    "type": "string",
                    "description": "The search query. For example, \"new york\".",
                    "default": "new york"
                  },
                  "offset": {
                    "type": "number",
                    "description": "Optional. The offset for pagination.",
                    "default": 0
                  }
                },
                "example": {
                  "query": "golden retrievers"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "modelId": {
                          "required": true,
                          "type": "string"
                        },
                        "layers": {
                          "items": {
                            "required": true,
                            "type": "string"
                          }
                        },
                        "query": {
                          "required": true,
                          "type": "string"
                        },
                        "offset": {
                          "type": "number"
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": null
                      }
                    },
                    "resultsCount": {
                      "type": "number"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "nextOffset": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/explanation/search-model": {
      "post": {
        "summary": "Search by Model",
        "tags": ["Explanations"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search for explanations within a specific model. Takes a query and returns up to 20 results at a time.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "query"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model to search within."
                  },
                  "query": {
                    "type": "string",
                    "description": "The search query (minimum 3 characters)."
                  },
                  "offset": {
                    "type": "number",
                    "description": "Optional. The offset for pagination."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/api/explanation/search-release": {
      "post": {
        "summary": "Search by Release",
        "tags": ["Explanations"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search for explanations within a specific release. Takes a query and returns up to 20 results at a time.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["releaseName", "query"],
                "properties": {
                  "releaseName": {
                    "type": "string",
                    "description": "The name of the release to search within."
                  },
                  "query": {
                    "type": "string",
                    "description": "The search query (minimum 3 characters)."
                  },
                  "offset": {
                    "type": "number",
                    "description": "Optional. The offset for pagination."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/api/explanation/search": {
      "post": {
        "tags": ["Explanations"],
        "summary": "Search by Sources/SAEs",
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search for explanations in the features of one or more SAEs in a model. Takes a query and returns up to 20 results at a time.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelId": {
                    "required": true,
                    "type": "string",
                    "description": "The ID of the model. For example, \"gemma-2b\".",
                    "default": "gemma-2b"
                  },
                  "layers": {
                    "required": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The layers / SAE IDs to search. For example, [\"0-res-jb\", \"6-res-jb\"]",
                    "default": ["0-res-jb", "6-res-jb"]
                  },
                  "query": {
                    "required": true,
                    "type": "string",
                    "description": "The search query. For example, \"new york\".",
                    "default": "new york"
                  },
                  "offset": {
                    "type": "number",
                    "description": "Optional. The offset for pagination.",
                    "default": 0
                  }
                },
                "example": {
                  "modelId": "gemma-2-2b",
                  "layers": ["16-gemmascope-res-16k"],
                  "query": "golden retrievers"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "modelId": {
                          "required": true,
                          "type": "string"
                        },
                        "layers": {
                          "items": {
                            "required": true,
                            "type": "string"
                          }
                        },
                        "query": {
                          "required": true,
                          "type": "string"
                        },
                        "offset": {
                          "type": "number"
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": null
                      }
                    },
                    "resultsCount": {
                      "type": "number"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "nextOffset": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/list/add-features": {
      "post": {
        "summary": "Add Features to List",
        "description": "Adds one or more features to an existing list.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId", "featuresToAdd"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list to add features to"
                  },
                  "featuresToAdd": {
                    "description": "The features to add to the list. Takes a max of 100 features at a time.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["modelId", "layer", "index"],
                      "properties": {
                        "modelId": {
                          "type": "string",
                          "description": "The ID of the model the feature belongs to"
                        },
                        "layer": {
                          "type": "string",
                          "description": "The layer of the feature"
                        },
                        "index": {
                          "type": "string",
                          "description": "The index of the feature"
                        },
                        "description": {
                          "type": "string",
                          "description": "Optional description for the feature"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added features to the list"
          }
        }
      }
    },
    "/api/list/delete": {
      "post": {
        "summary": "Delete List",
        "description": "Deletes an existing list that you own.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Returns true if the list was successfully deleted"
                }
              }
            }
          }
        }
      }
    },
    "/api/list/edit-feature": {
      "post": {
        "summary": "Edit List Feature",
        "description": "Updates the description of a specific feature in a list.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId", "modelId", "layer", "index", "description"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list containing the feature"
                  },
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model the feature belongs to"
                  },
                  "layer": {
                    "type": "string",
                    "description": "The layer of the feature"
                  },
                  "index": {
                    "type": "string",
                    "description": "The index of the feature"
                  },
                  "description": {
                    "type": "string",
                    "description": "The new description for the feature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated feature description"
          }
        }
      }
    },
    "/api/list/get": {
      "post": {
        "summary": "Get List Details",
        "description": "Retrieves detailed information about a specific list.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list to retrieve"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved list details"
          }
        }
      }
    },
    "/api/list/list": {
      "post": {
        "summary": "Get Lists",
        "description": "Retrieves all lists created by the authenticated user.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user lists"
          }
        }
      }
    },
    "/api/list/new-with-features": {
      "post": {
        "summary": "Create List with Features",
        "description": "Creates a new list and adds specified features to it.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "features"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the new list",
                    "default": "Twitter features"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional description for the list",
                    "default": "This is a twitter list"
                  },
                  "testText": {
                    "type": "string",
                    "description": "Optional test text for the list, which will show the activations for the text for all the features in the list."
                  },
                  "features": {
                    "type": "array",
                    "description": "The features to add to the list",
                    "default": [
                      {
                        "modelId": "gpt2-small",
                        "layer": "9-res-jb",
                        "index": 1124
                      },
                      {
                        "modelId": "gpt2-small",
                        "layer": "2-att-kk",
                        "index": 10116
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": ["modelId", "layer", "index"],
                      "properties": {
                        "modelId": {
                          "type": "string",
                          "description": "The ID of the model"
                        },
                        "layer": {
                          "type": "string",
                          "description": "The SAE ID / layer name of the feature"
                        },
                        "index": {
                          "type": "integer",
                          "description": "The index of the feature"
                        },
                        "description": {
                          "type": "string",
                          "description": "Optional description for the feature"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the newly created list"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the created list"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the created list"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/list/new": {
      "post": {
        "summary": "Create List",
        "description": "Creates an empty new list for the authenticated user.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the new list",
                    "default": "Test List"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional description for the list",
                    "default": "This is a test list"
                  },
                  "testText": {
                    "type": "string",
                    "description": "Optional test text for the list, which will show the activations for the text for all the features in the list.",
                    "default": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the newly created list"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the created list"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the created list"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/list/remove": {
      "post": {
        "summary": "Remove Feature from List",
        "description": "Removes a specified feature from a list.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId", "modelId", "layer", "index"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list from which to remove the feature"
                  },
                  "modelId": {
                    "type": "string",
                    "description": "The ID of the model the feature belongs to"
                  },
                  "layer": {
                    "type": "string",
                    "description": "The layer name or SAE ID of the feature"
                  },
                  "index": {
                    "type": "string",
                    "description": "The index of the feature"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully removed feature from list"
          }
        }
      }
    },
    "/api/list/update": {
      "post": {
        "summary": "Update List Metadata",
        "description": "Updates an existing list's metadata.",
        "tags": ["Lists"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["listId", "name"],
                "properties": {
                  "listId": {
                    "type": "string",
                    "description": "The ID of the list to update"
                  },
                  "name": {
                    "type": "string",
                    "description": "The new name for the list"
                  },
                  "description": {
                    "type": "string",
                    "description": "The new description for the list"
                  },
                  "defaultTestText": {
                    "type": "string",
                    "description": "Optional new default test text for the list"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the newly created list"
                    },
                    "name": {
                      "type": "string",
                      "description": "The updated name of the list"
                    },
                    "description": {
                      "type": "string",
                      "description": "The updated description of the list"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search-all": {
      "post": {
        "summary": "Top Features for Text",
        "description": "Returns the top features for a given text input. Equivalent to the https://neuronpedia.org/search functionality. Contact us to increase your rate limit for free if you hit it.",
        "tags": ["Search"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelId": {
                    "description": "The model to search.",
                    "type": "string",
                    "required": true,
                    "default": "gpt2-small"
                  },
                  "sourceSet": {
                    "description": "The SAE set to search.",
                    "type": "string",
                    "required": true,
                    "default": "res-jb"
                  },
                  "text": {
                    "description": "The custom text to run through the model.",
                    "type": "string",
                    "required": true,
                    "default": "hello world"
                  },
                  "selectedLayers": {
                    "description": "The SAE IDs to search. Use [] to search all SAEs in this SAE set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": ["6-res-jb"]
                  },
                  "sortIndexes": {
                    "description": "The token(s) to sort by. Specify multiple to sort by the sum of the selected tokens. Use [] to sort by max activation of any token (default behavior). In this \"hello world\" example, a <|endoftext|> is automatically prepended, so sorting by index 1 means we sort by token \" hello\".",
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "default": [1]
                  },
                  "ignoreBos": {
                    "description": "Don't return results where the top token activation is the BOS token.",
                    "type": "boolean",
                    "default": false
                  },
                  "densityThreshold": {
                    "description": "Don't return features with a density greater than this threshold. Should be between 0 and 1. -1 means no threshold (default).",
                    "type": "number",
                    "default": -1
                  },
                  "numResults": {
                    "description": "The max number of results to return. May return fewer if density threshold is used. Max is 100.",
                    "type": "number",
                    "default": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search with results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "modelId": {
                            "type": "string"
                          },
                          "layer": {
                            "type": "string"
                          },
                          "index": {
                            "type": "string"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "maxValue": {
                            "type": "number"
                          },
                          "maxValueIndex": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or missing search text."
          },
          "500": {
            "description": "Internal server error during the search process."
          }
        }
      }
    },
    "/api/steer-chat": {
      "post": {
        "tags": ["Steering"],
        "summary": "Steer With SAE Features (Chat)",
        "security": [
          {
            "apiKey": []
          },
          {}
        ],
        "description": "Given chat messages and a set of SAE features, steer a model to generate both its default and steered chat completions. This is for chat, not completions.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "defaultChatMessages": [
                    {
                      "role": "user",
                      "content": "hi"
                    }
                  ],
                  "steeredChatMessages": [
                    {
                      "role": "user",
                      "content": "hi"
                    }
                  ],
                  "modelId": "gemma-2-9b-it",
                  "features": [
                    {
                      "modelId": "gemma-2-9b-it",
                      "layer": "9-gemmascope-res-131k",
                      "index": 62610,
                      "strength": 48
                    }
                  ],
                  "temperature": 0.5,
                  "n_tokens": 48,
                  "freq_penalty": 2,
                  "seed": 16,
                  "strength_multiplier": 4,
                  "steer_special_tokens": true
                },
                "properties": {
                  "defaultChatMessages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["role", "content"],
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["user", "assistant", "system", "model"]
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "steeredChatMessages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["role", "content"],
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["user", "assistant", "system", "model"]
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["modelId", "layer", "index", "strength"],
                      "properties": {
                        "modelId": {
                          "type": "string"
                        },
                        "layer": {
                          "type": "string"
                        },
                        "index": {
                          "type": "number"
                        },
                        "strength": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "temperature": {
                    "type": "number"
                  },
                  "n_tokens": {
                    "type": "number"
                  },
                  "freq_penalty": {
                    "type": "number"
                  },
                  "seed": {
                    "type": "number"
                  },
                  "strength_multiplier": {
                    "type": "number"
                  },
                  "steer_special_tokens": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful steering response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "chat_template": {
                          "type": "array"
                        }
                      }
                    },
                    "steered": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "chat_template": {
                          "type": "array"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "shareUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/steer": {
      "post": {
        "tags": ["Steering"],
        "summary": "Steer With SAE Features (Non-Chat)",
        "security": [
          {
            "apiKey": []
          },
          {}
        ],
        "description": "Given a prompt and a set of SAE features, steer a model to generate both its default and steered text. This is for completions, not chat.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "prompt": "The most iconic structure on Earth is",
                  "modelId": "gemma-2-2b",
                  "features": [
                    {
                      "modelId": "gemma-2-2b",
                      "layer": "20-gemmascope-res-16k",
                      "index": 3124,
                      "strength": 38.5
                    }
                  ],
                  "temperature": 0.5,
                  "n_tokens": 48,
                  "freq_penalty": 2,
                  "seed": 16,
                  "strength_multiplier": 4
                },
                "properties": {
                  "prompt": {
                    "type": "string"
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["modelId", "layer", "index", "strength"],
                      "properties": {
                        "modelId": {
                          "type": "string"
                        },
                        "layer": {
                          "type": "string"
                        },
                        "index": {
                          "type": "number"
                        },
                        "strength": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "temperature": {
                    "type": "number"
                  },
                  "n_tokens": {
                    "type": "number"
                  },
                  "freq_penalty": {
                    "type": "number"
                  },
                  "seed": {
                    "type": "number"
                  },
                  "strength_multiplier": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": null
          }
        }
      }
    },
    "/api/vector/delete": {
      "post": {
        "summary": "Delete Vector",
        "description": "Deletes an existing vector on Neuronpedia. You can only delete vectors you created.",
        "tags": ["Vectors"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "source", "index"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "ID of the model"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source identifier for the vector"
                  },
                  "index": {
                    "type": "string",
                    "description": "Index of the vector to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vector deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vector/get": {
      "post": {
        "summary": "Get Vector Details",
        "description": "Returns details for a specific vector by model ID, source and index",
        "tags": ["Vectors"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["modelId", "source", "index"],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "ID of the model"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source/layer identifier"
                  },
                  "index": {
                    "type": "string",
                    "description": "Vector index"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vector details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vector": {
                      "type": "object",
                      "properties": {
                        "modelId": {
                          "type": "string"
                        },
                        "layer": {
                          "type": "string"
                        },
                        "index": {
                          "type": "string"
                        },
                        "vectorLabel": {
                          "type": "string"
                        },
                        "vectorDefaultSteerStrength": {
                          "type": "number"
                        },
                        "hookName": {
                          "type": "string"
                        },
                        "vector": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vector/list-owned": {
      "post": {
        "summary": "List User's Vectors",
        "description": "Returns all vectors owned by the authenticated user",
        "tags": ["Vectors"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's vectors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vectors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "modelId": {
                            "type": "string"
                          },
                          "layer": {
                            "type": "string"
                          },
                          "index": {
                            "type": "string"
                          },
                          "vectorLabel": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "vectorDefaultSteerStrength": {
                            "type": "number"
                          },
                          "hookName": {
                            "type": "string"
                          },
                          "vector": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vector/new": {
      "post": {
        "summary": "Create Vector",
        "description": "Creates a new vector to store on Neuronpedia",
        "tags": ["Vectors"],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "modelId",
                  "layerNumber",
                  "hookType",
                  "vector",
                  "vectorDefaultSteerStrength",
                  "vectorLabel"
                ],
                "properties": {
                  "modelId": {
                    "type": "string",
                    "description": "ID of the model"
                  },
                  "layerNumber": {
                    "type": "number",
                    "description": "Layer number in the model (0-based)"
                  },
                  "hookType": {
                    "type": "string",
                    "description": "Hook type. Currently only \"resid-pre\" is supported.",
                    "enum": ["resid-pre"]
                  },
                  "vector": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "maxItems": 24576,
                    "description": "The vector's values. Must match the model's dimension."
                  },
                  "vectorDefaultSteerStrength": {
                    "type": "number",
                    "minimum": -100,
                    "maximum": 100,
                    "description": "Default steering strength (-100 to 100)."
                  },
                  "vectorLabel": {
                    "type": "string",
                    "description": "Label/name for the vector"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vector created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "object",
                      "properties": {
                        "modelId": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        },
                        "index": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
