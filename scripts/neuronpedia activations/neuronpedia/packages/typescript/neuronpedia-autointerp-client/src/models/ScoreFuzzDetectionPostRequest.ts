/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - AutoInterp Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NPScoreFuzzDetectionType } from './NPScoreFuzzDetectionType';
import {
    NPScoreFuzzDetectionTypeFromJSON,
    NPScoreFuzzDetectionTypeFromJSONTyped,
    NPScoreFuzzDetectionTypeToJSON,
    NPScoreFuzzDetectionTypeToJSONTyped,
} from './NPScoreFuzzDetectionType';
import type { NPActivation } from './NPActivation';
import {
    NPActivationFromJSON,
    NPActivationFromJSONTyped,
    NPActivationToJSON,
    NPActivationToJSONTyped,
} from './NPActivation';

/**
 * Request model for scoring explanations using fuzzing or detection methods
 * @export
 * @interface ScoreFuzzDetectionPostRequest
 */
export interface ScoreFuzzDetectionPostRequest {
    /**
     * List of activation records to analyze
     * @type {Array<NPActivation>}
     * @memberof ScoreFuzzDetectionPostRequest
     */
    activations: Array<NPActivation>;
    /**
     * The explanation to evaluate
     * @type {string}
     * @memberof ScoreFuzzDetectionPostRequest
     */
    explanation: string;
    /**
     * API key for OpenRouter service
     * @type {string}
     * @memberof ScoreFuzzDetectionPostRequest
     */
    openrouterKey: string;
    /**
     * Model identifier to use for scoring
     * @type {string}
     * @memberof ScoreFuzzDetectionPostRequest
     */
    model: string;
    /**
     * 
     * @type {NPScoreFuzzDetectionType}
     * @memberof ScoreFuzzDetectionPostRequest
     */
    type: NPScoreFuzzDetectionType;
}



/**
 * Check if a given object implements the ScoreFuzzDetectionPostRequest interface.
 */
export function instanceOfScoreFuzzDetectionPostRequest(value: object): value is ScoreFuzzDetectionPostRequest {
    if (!('activations' in value) || value['activations'] === undefined) return false;
    if (!('explanation' in value) || value['explanation'] === undefined) return false;
    if (!('openrouterKey' in value) || value['openrouterKey'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ScoreFuzzDetectionPostRequestFromJSON(json: any): ScoreFuzzDetectionPostRequest {
    return ScoreFuzzDetectionPostRequestFromJSONTyped(json, false);
}

export function ScoreFuzzDetectionPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoreFuzzDetectionPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'activations': ((json['activations'] as Array<any>).map(NPActivationFromJSON)),
        'explanation': json['explanation'],
        'openrouterKey': json['openrouter_key'],
        'model': json['model'],
        'type': NPScoreFuzzDetectionTypeFromJSON(json['type']),
    };
}

export function ScoreFuzzDetectionPostRequestToJSON(json: any): ScoreFuzzDetectionPostRequest {
    return ScoreFuzzDetectionPostRequestToJSONTyped(json, false);
}

export function ScoreFuzzDetectionPostRequestToJSONTyped(value?: ScoreFuzzDetectionPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activations': ((value['activations'] as Array<any>).map(NPActivationToJSON)),
        'explanation': value['explanation'],
        'openrouter_key': value['openrouterKey'],
        'model': value['model'],
        'type': NPScoreFuzzDetectionTypeToJSON(value['type']),
    };
}

