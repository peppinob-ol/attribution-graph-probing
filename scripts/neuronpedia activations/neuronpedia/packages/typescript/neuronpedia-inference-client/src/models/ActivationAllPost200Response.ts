/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActivationAllPost200ResponseActivationsInner } from './ActivationAllPost200ResponseActivationsInner';
import {
    ActivationAllPost200ResponseActivationsInnerFromJSON,
    ActivationAllPost200ResponseActivationsInnerFromJSONTyped,
    ActivationAllPost200ResponseActivationsInnerToJSON,
    ActivationAllPost200ResponseActivationsInnerToJSONTyped,
} from './ActivationAllPost200ResponseActivationsInner';

/**
 * Response for NPActivationAllRequest. Contains activations for each top feature and the tokenized prompt.
 * @export
 * @interface ActivationAllPost200Response
 */
export interface ActivationAllPost200Response {
    /**
     * 
     * @type {Array<ActivationAllPost200ResponseActivationsInner>}
     * @memberof ActivationAllPost200Response
     */
    activations: Array<ActivationAllPost200ResponseActivationsInner>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ActivationAllPost200Response
     */
    tokens: Array<string>;
    /**
     * Not currently supported and may be incorrect. This is the number of features that activated by layer, starting from layer 0 of this SAE. Need to be redesigned.
     * @type {Array<Array<number>>}
     * @memberof ActivationAllPost200Response
     */
    counts?: Array<Array<number>>;
}

/**
 * Check if a given object implements the ActivationAllPost200Response interface.
 */
export function instanceOfActivationAllPost200Response(value: object): value is ActivationAllPost200Response {
    if (!('activations' in value) || value['activations'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    return true;
}

export function ActivationAllPost200ResponseFromJSON(json: any): ActivationAllPost200Response {
    return ActivationAllPost200ResponseFromJSONTyped(json, false);
}

export function ActivationAllPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivationAllPost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'activations': ((json['activations'] as Array<any>).map(ActivationAllPost200ResponseActivationsInnerFromJSON)),
        'tokens': json['tokens'],
        'counts': json['counts'] == null ? undefined : json['counts'],
    };
}

export function ActivationAllPost200ResponseToJSON(json: any): ActivationAllPost200Response {
    return ActivationAllPost200ResponseToJSONTyped(json, false);
}

export function ActivationAllPost200ResponseToJSONTyped(value?: ActivationAllPost200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activations': ((value['activations'] as Array<any>).map(ActivationAllPost200ResponseActivationsInnerToJSON)),
        'tokens': value['tokens'],
        'counts': value['counts'],
    };
}

