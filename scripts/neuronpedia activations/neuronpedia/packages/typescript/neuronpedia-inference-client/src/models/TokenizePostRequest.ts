/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Tokenize input text for a given model
 * @export
 * @interface TokenizePostRequest
 */
export interface TokenizePostRequest {
    /**
     * ID of the model to use for tokenization
     * @type {string}
     * @memberof TokenizePostRequest
     */
    model: string;
    /**
     * The text to tokenize
     * @type {string}
     * @memberof TokenizePostRequest
     */
    text: string;
    /**
     * Whether to prepend beginning-of-sequence token. If not specified, uses the model's default setting.
     * @type {boolean}
     * @memberof TokenizePostRequest
     */
    prependBos?: boolean | null;
}

/**
 * Check if a given object implements the TokenizePostRequest interface.
 */
export function instanceOfTokenizePostRequest(value: object): value is TokenizePostRequest {
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function TokenizePostRequestFromJSON(json: any): TokenizePostRequest {
    return TokenizePostRequestFromJSONTyped(json, false);
}

export function TokenizePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenizePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'model': json['model'],
        'text': json['text'],
        'prependBos': json['prepend_bos'] == null ? undefined : json['prepend_bos'],
    };
}

export function TokenizePostRequestToJSON(json: any): TokenizePostRequest {
    return TokenizePostRequestToJSONTyped(json, false);
}

export function TokenizePostRequestToJSONTyped(value?: TokenizePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'model': value['model'],
        'text': value['text'],
        'prepend_bos': value['prependBos'],
    };
}

