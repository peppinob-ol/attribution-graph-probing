/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NPSteerFeature
 */
export interface NPSteerFeature {
    /**
     * 
     * @type {string}
     * @memberof NPSteerFeature
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof NPSteerFeature
     */
    source: string;
    /**
     * 
     * @type {number}
     * @memberof NPSteerFeature
     */
    index: number;
    /**
     * 
     * @type {number}
     * @memberof NPSteerFeature
     */
    strength: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof NPSteerFeature
     */
    steeringVector?: Array<number>;
}

/**
 * Check if a given object implements the NPSteerFeature interface.
 */
export function instanceOfNPSteerFeature(value: object): value is NPSteerFeature {
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('strength' in value) || value['strength'] === undefined) return false;
    return true;
}

export function NPSteerFeatureFromJSON(json: any): NPSteerFeature {
    return NPSteerFeatureFromJSONTyped(json, false);
}

export function NPSteerFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): NPSteerFeature {
    if (json == null) {
        return json;
    }
    return {
        
        'model': json['model'],
        'source': json['source'],
        'index': json['index'],
        'strength': json['strength'],
        'steeringVector': json['steering_vector'] == null ? undefined : json['steering_vector'],
    };
}

export function NPSteerFeatureToJSON(json: any): NPSteerFeature {
    return NPSteerFeatureToJSONTyped(json, false);
}

export function NPSteerFeatureToJSONTyped(value?: NPSteerFeature | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'model': value['model'],
        'source': value['source'],
        'index': value['index'],
        'strength': value['strength'],
        'steering_vector': value['steeringVector'],
    };
}

