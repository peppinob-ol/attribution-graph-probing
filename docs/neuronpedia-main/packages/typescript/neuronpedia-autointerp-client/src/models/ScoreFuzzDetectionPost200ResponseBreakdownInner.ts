/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - AutoInterp Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The "scorer.__call__" result's score breakdown. Type copied from https://github.com/EleutherAI/sae-auto-interp/blob/3659ff3bfefbe2628d37484e5bcc0087a5b10a27/sae_auto_interp/scorers/classifier/sample.py#L19
 * @export
 * @interface ScoreFuzzDetectionPost200ResponseBreakdownInner
 */
export interface ScoreFuzzDetectionPost200ResponseBreakdownInner {
    /**
     * List of strings
     * @type {Array<string>}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    strTokens?: Array<string>;
    /**
     * List of floats
     * @type {Array<number>}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    activations?: Array<number>;
    /**
     * Quantile or neighbor distance
     * @type {number}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    distance?: number;
    /**
     * Whether the example is activating or not
     * @type {boolean}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    groundTruth?: boolean;
    /**
     * Whether the model predicted the example activating or not
     * @type {boolean}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    prediction?: boolean;
    /**
     * Whether the sample is highlighted
     * @type {boolean}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    highlighted?: boolean;
    /**
     * The probability of the example activating
     * @type {number}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    probability?: number;
    /**
     * Whether the prediction is correct
     * @type {boolean}
     * @memberof ScoreFuzzDetectionPost200ResponseBreakdownInner
     */
    correct?: boolean;
}

/**
 * Check if a given object implements the ScoreFuzzDetectionPost200ResponseBreakdownInner interface.
 */
export function instanceOfScoreFuzzDetectionPost200ResponseBreakdownInner(value: object): value is ScoreFuzzDetectionPost200ResponseBreakdownInner {
    return true;
}

export function ScoreFuzzDetectionPost200ResponseBreakdownInnerFromJSON(json: any): ScoreFuzzDetectionPost200ResponseBreakdownInner {
    return ScoreFuzzDetectionPost200ResponseBreakdownInnerFromJSONTyped(json, false);
}

export function ScoreFuzzDetectionPost200ResponseBreakdownInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoreFuzzDetectionPost200ResponseBreakdownInner {
    if (json == null) {
        return json;
    }
    return {
        
        'strTokens': json['str_tokens'] == null ? undefined : json['str_tokens'],
        'activations': json['activations'] == null ? undefined : json['activations'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'groundTruth': json['ground_truth'] == null ? undefined : json['ground_truth'],
        'prediction': json['prediction'] == null ? undefined : json['prediction'],
        'highlighted': json['highlighted'] == null ? undefined : json['highlighted'],
        'probability': json['probability'] == null ? undefined : json['probability'],
        'correct': json['correct'] == null ? undefined : json['correct'],
    };
}

export function ScoreFuzzDetectionPost200ResponseBreakdownInnerToJSON(json: any): ScoreFuzzDetectionPost200ResponseBreakdownInner {
    return ScoreFuzzDetectionPost200ResponseBreakdownInnerToJSONTyped(json, false);
}

export function ScoreFuzzDetectionPost200ResponseBreakdownInnerToJSONTyped(value?: ScoreFuzzDetectionPost200ResponseBreakdownInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'str_tokens': value['strTokens'],
        'activations': value['activations'],
        'distance': value['distance'],
        'ground_truth': value['groundTruth'],
        'prediction': value['prediction'],
        'highlighted': value['highlighted'],
        'probability': value['probability'],
        'correct': value['correct'],
    };
}

