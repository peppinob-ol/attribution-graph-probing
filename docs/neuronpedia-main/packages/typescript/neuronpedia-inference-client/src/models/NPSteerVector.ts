/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A raw vector for steering, including its hook and strength
 * @export
 * @interface NPSteerVector
 */
export interface NPSteerVector {
    /**
     * 
     * @type {Array<number>}
     * @memberof NPSteerVector
     */
    steeringVector: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof NPSteerVector
     */
    strength: number;
    /**
     * 
     * @type {string}
     * @memberof NPSteerVector
     */
    hook: string;
}

/**
 * Check if a given object implements the NPSteerVector interface.
 */
export function instanceOfNPSteerVector(value: object): value is NPSteerVector {
    if (!('steeringVector' in value) || value['steeringVector'] === undefined) return false;
    if (!('strength' in value) || value['strength'] === undefined) return false;
    if (!('hook' in value) || value['hook'] === undefined) return false;
    return true;
}

export function NPSteerVectorFromJSON(json: any): NPSteerVector {
    return NPSteerVectorFromJSONTyped(json, false);
}

export function NPSteerVectorFromJSONTyped(json: any, ignoreDiscriminator: boolean): NPSteerVector {
    if (json == null) {
        return json;
    }
    return {
        
        'steeringVector': json['steering_vector'],
        'strength': json['strength'],
        'hook': json['hook'],
    };
}

export function NPSteerVectorToJSON(json: any): NPSteerVector {
    return NPSteerVectorToJSONTyped(json, false);
}

export function NPSteerVectorToJSONTyped(value?: NPSteerVector | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'steering_vector': value['steeringVector'],
        'strength': value['strength'],
        'hook': value['hook'],
    };
}

