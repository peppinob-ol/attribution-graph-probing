/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const NPSteerMethod = {
    SimpleAdditive: 'SIMPLE_ADDITIVE',
    OrthogonalDecomp: 'ORTHOGONAL_DECOMP'
} as const;
export type NPSteerMethod = typeof NPSteerMethod[keyof typeof NPSteerMethod];


export function instanceOfNPSteerMethod(value: any): boolean {
    for (const key in NPSteerMethod) {
        if (Object.prototype.hasOwnProperty.call(NPSteerMethod, key)) {
            if (NPSteerMethod[key as keyof typeof NPSteerMethod] === value) {
                return true;
            }
        }
    }
    return false;
}

export function NPSteerMethodFromJSON(json: any): NPSteerMethod {
    return NPSteerMethodFromJSONTyped(json, false);
}

export function NPSteerMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): NPSteerMethod {
    return json as NPSteerMethod;
}

export function NPSteerMethodToJSON(value?: NPSteerMethod | null): any {
    return value as any;
}

export function NPSteerMethodToJSONTyped(value: any, ignoreDiscriminator: boolean): NPSteerMethod {
    return value as NPSteerMethod;
}

