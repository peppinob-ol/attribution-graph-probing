/* tslint:disable */
/* eslint-disable */
/**
 * Neuronpedia - Inference Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: johnny@neuronpedia.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenizePost200Response
 */
export interface TokenizePost200Response {
    /**
     * Token IDs for the input text
     * @type {Array<number>}
     * @memberof TokenizePost200Response
     */
    tokens: Array<number>;
    /**
     * String representation of each token
     * @type {Array<string>}
     * @memberof TokenizePost200Response
     */
    tokenStrings: Array<string>;
    /**
     * Whether beginning-of-sequence token was prepended
     * @type {boolean}
     * @memberof TokenizePost200Response
     */
    prependBos: boolean;
}

/**
 * Check if a given object implements the TokenizePost200Response interface.
 */
export function instanceOfTokenizePost200Response(value: object): value is TokenizePost200Response {
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    if (!('tokenStrings' in value) || value['tokenStrings'] === undefined) return false;
    if (!('prependBos' in value) || value['prependBos'] === undefined) return false;
    return true;
}

export function TokenizePost200ResponseFromJSON(json: any): TokenizePost200Response {
    return TokenizePost200ResponseFromJSONTyped(json, false);
}

export function TokenizePost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenizePost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'tokens': json['tokens'],
        'tokenStrings': json['token_strings'],
        'prependBos': json['prepend_bos'],
    };
}

export function TokenizePost200ResponseToJSON(json: any): TokenizePost200Response {
    return TokenizePost200ResponseToJSONTyped(json, false);
}

export function TokenizePost200ResponseToJSONTyped(value?: TokenizePost200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tokens': value['tokens'],
        'token_strings': value['tokenStrings'],
        'prepend_bos': value['prependBos'],
    };
}

