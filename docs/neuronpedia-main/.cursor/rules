/\*\*

- eslint-disable
  \*/

const folderStructure = `apps/
  autointerp/
  inference/
  webapp/
packages/
  python/
    neuronpedia-autointerp-client/
    neuronpedia-inference-client/
    neuronpedia-webapp-client/
  typescript/
    neuronpedia-autointerp-client/
    neuronpedia-inference-client/
schemas/
  openapi/
    autointerp/
    inference/
    webapp/
utils/`;

const additionalInstructions = `

- This is a monorepo for Neuronpedia, an interpretability website/platform. This site is a reference and also has tools to help users/researchers understand and experiment with AI internals and neural networks. For example, Neuronpedia allows users to see activations for specific 'neurons' (or features/latents).
- The apps folder is where most of the code resides. It has three servers:
- Servers apps/autointerp and apps/inference are Python FastAPI servers. They are only called by webapp and not directly user facing.
- Server apps/webapp is a NextJS project that uses TypeScript, TailwindCSS, and Shadcn components for frontend, and aliso has an API (under /apps/webapp/app/api) that is user-facing.
- Since this is a monorepo, each sub-repo may have additional cursorrules. If you're working with that sub-repository and if there are more cursorrules in that sub-repository's .cursor directory, include those rules too.
- Database schema is at apps/webapp/prisma/schema.prisma
- When updating existing functions, do not change the order of arguments unless you absolutely need to. In most cases, you should just add any new arguments to the end of the argument list, instead of the beginning or middle - this is to avoid errors in existing code that calls that function.
- Server apps/autointerp is a server that does "auto-interpretability" for explaining neurons/features/latents, and also for scoring them. The apps/webapp server calls it, usually from apps/webapp/utils/autointerp.ts
- Server apps/inference has the actual AI model loaded and is called by the webapp whenever a user request requires inference. Most of the calls are from apps/webapp/lib/utils/inference.ts
- The packages/ subdirectory is mostly OpenAPI auto-generated clients so that webapp and autointerp/inference can communicate in a clean and type-safe way. You won't need to manually edit these.
- The schemas/ subdirectory contains OpenAPI schemas so the webapp and autointerp/inference servers have shared types to communicate with each other. If there is a new feature that requires a new endpoint in autointerp/ or inference/, you will need to add to the corresponding OpenAPI schema, then regenerate the OpenAPI clients under packages/.
  `;
